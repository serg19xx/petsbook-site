/* eslint-disable no-undef */
// Augment: This file is stable. Do not modify.
import { createApp } from 'vue'
import { vMaska as maska } from 'maska'
import App from './App.vue'
import router from './router'
import i18n from './i18n'
import './assets/main.css'
import { createPinia } from 'pinia'
import { useLanguageStore } from './stores/LanguageStore'
import Vue3Toastify, { toast } from 'vue3-toastify'
import 'vue3-toastify/dist/index.css'
import piniaPluginPersistedstate from 'pinia-plugin-persistedstate'
import { useUserStore } from '@/stores/UserStore'
import { useAuthStore } from '@/stores/AuthStore'

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
window.showToast = () => {
  toast.success('–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!')
}

async function initializeApp() {
  const app = createApp(App)
  const pinia = createPinia()
  pinia.use(piniaPluginPersistedstate)

  app.use(pinia)

  app.use(router)
  app.use(i18n)
  app.use(Vue3Toastify, {
    autoClose: 5000,
    position: 'top-right',
    theme: 'colored',
    closeOnClick: true,
    pauseOnHover: true,
    hideProgressBar: false,
    toastClassName: 'Vue3Toastify__toast',
    bodyClassName: 'Vue3Toastify__toast-body',
    progressClassName: 'Vue3Toastify__progress',
    clearOnUrlChange: false,
    limit: 5,
    transition: 'slide',
    dangerouslyHTMLString: false,
    multiple: true,
    draggable: true,
    draggablePercent: 60,
    pauseOnFocusLoss: true,
    rtl: false,
    progressStyle: {
      background: 'rgba(255, 255, 255, 0.3)',
    },
    delay: 0,
    stacked: true,
    containerId: 'toast-container',
  })

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ü–û–°–õ–ï —É—Å—Ç–∞–Ω–æ–≤–∫–∏ pinia
  const authStore = useAuthStore()
  const userStore = useUserStore()
  const languageStore = useLanguageStore()

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é
  authStore.isReady = false

  try {
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–æ–º–∏—Å–æ–≤ –¥–ª—è –≤—Å–µ—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const startupPromises = []

    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–∞
    startupPromises.push(languageStore.initializeLanguage())

    // 2. –°–†–ê–ó–£ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    const hasToken = authStore.initializeAuth()
    console.log('üîê Auth initialized:', { hasToken, isAuthenticated: authStore.isAuthenticated })

    // 3. –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (hasToken) {
      console.log('üì• Loading user data...')
      startupPromises.push(userStore.fetchUserData())
    }

    // –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
    await Promise.all(startupPromises)

    console.log('‚úÖ App initialization completed:', {
      isAuthenticated: authStore.isAuthenticated,
      userRole: userStore.userData?.role,
      hasToken: hasToken,
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error)
  } finally {
    // –í–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ø–µ—Ö–∞/–æ—à–∏–±–∫–∏, —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    authStore.isReady = true
    console.log('üöÄ App ready, mounting...')

    // –ú–æ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –°–ï–ô–ß–ê–°, –∫–æ–≥–¥–∞ –≤—Å–µ –≥–æ—Ç–æ–≤–æ
    app.mount('#app')
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initializeApp()
